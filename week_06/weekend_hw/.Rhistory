getwd()
library(tidyverse)
library(janitor)
library(infer)
players <- read_csv("data/players.csv")
player <- clean_names(players)
players <- clean_names(players)
players <- read_csv("data/players.csv")
players <- clean_names(players)
View(players)
players %>%
ggplot +
aes(x = overall) +
geom_histogram(col = "white")
players %>%
ggplot +
aes(y = overall) +
geom_boxplot() +
coord_flip()
library(e1071)
players %>%
skewness(overs)
players %>%
skewness(overall)
skewness(players$overall)
library(skimr)
players %>%
select(overall) %>%
skim()
#I'll use the getMode function from the other day
#will have to create it in scope first
getMode <- function(data){
tabled_data <- table(data)
table_names <- names(tabled_data)
return( table_names[tabled_data == max(tabled_data)] )
}
players %>%
select(overall) %>%
summarise(mode = getMode())
players %>%
summarise(mode = getMode(overall))
bootstrap_overall <- players %>%
specify(response = overall) %>%
generate(reps = 10000, type = "bootstrap") %>%
calculate(stat = "mean")
bootstrap_overall_ci95 <- bootstrap_overall %>%
get_ci(level = 0.95, type = "percentile")
bootstrap_overall %>%
visualise(bins = 30) +
shade_ci(endpoints = bootstrap_overall_ci95)
bootstrap_overall_ci95
library("Hmisc")
install.packages("Hmisc")
corr_matrix
library("Hmisc")
corr_matrix <- rcorr(as.matrix(players))
corr_matrix <- rcorr(as.matrix(players))
corr_matrix
corr_matrix <- rcorr(as.matrix(players))
library(GGally)
players %>%
ggscatmat()
players %>%
ggcor()
players %>%
ggcorr()
players %>%
ggscatmat()
players %>%
ggcorr()
style_model <- lm(formula = overall ~ composure, data = players)
summary(style_model)
glance(style_model)
library(modelr)
glance(style_model)
glance(style_model)
library(broom)
glance(style_model)
library(ggfortify)
autoplot(style_model)
tidy(style_model)
tidy(clean_names((style_model)
tidy(clean_names(style_model)
tidy(clean_names(style_model))
tidy_style_model <- tidy(clean_names(style_model))
tidy_style_model <- clean_names(tidy(style_model))
tidy_style_model
distribution_1 %>%
add_predictions(model_1) %>%
ggplot(aes(x = x)) +
geom_point(aes(y  = y)) +
geom_line(aes(y = pred), col = "red")
model_1 <-  lm(y ~ x, data = distribution_1)
distribution_1 <- read_csv("data/distribution_1.csv")
model_1 <-  lm(y ~ x, data = distribution_1)
distribution_1 %>%
add_predictions(model_1) %>%
ggplot(aes(x = x)) +
geom_point(aes(y  = y)) +
geom_line(aes(y = pred), col = "red")
players %>%
add_predictions(style_model) %>%
ggplot +
aes(x = composure) +
geom_point(y = overall) +
geom_line(y = pred), col = "red")
players %>%
add_predictions(style_model) %>%
ggplot +
aes(x = composure) +
geom_point(y = overall) +
geom_line(aes(y = pred), col = "red")
players %>%
add_predictions(style_model) %>%
ggplot +
aes(x = composure) +
geom_point(aes(y = overall)) +
geom_line(aes(y = pred), col = "red")
library(infer)
model_2
bootstrap_distribution_slope <- distribution_2 %>%
specify(formula = y ~ x) %>%
generate(reps = 10000, type = "bootstrap") %>%
calculate(stat = "slope")
distribution_2 <- read_csv("data/distribution_2.csv")
model_2 <-  lm(y ~ x, data = distribution_2)
autoplot(model_2)
bootstrap_distribution_slope <- distribution_2 %>%
specify(formula = y ~ x) %>%
generate(reps = 10000, type = "bootstrap") %>%
calculate(stat = "slope")
slope_ci95 <- bootstrap_distribution_slope %>%
get_ci(level = 0.95, type = "percentile")
slope_ci95
bootstrap_style_slope <- players %>%
specify(formula = overall ~ composure) %>%
generate(reps = 10000, type = "bootstrap") %>%
calculate(stat = "slope")
slope_ci95 <- bootstrap_style_slope %>%
get_ci(level = 0.95, type = "percentile")
slope_ci95
outcome <- 5 * tidy_style_model[estimate, composure]
outcome <- 5 * tidy_style_model[estimate, 2]
outcome <- 5 * tidy_style_model$estimate
outcome
slope_ci95
players %>%
filter(international_reputation > 1)
players %>%
ggplot +
aes(x = international_reputation) +
geom_histogram()
players %>%
filter(international_reputation > 1) +
geom_histogram(aes(x = international_reputation))
players %>%
filter(international_reputation > 1) %>%
ggplot +
geom_histogram(aes(x = international_reputation))
int_significant_players <- players %>%
filter(international_reputation > 1)
int_significant_players
int_significant_players <- players %>%
mutate(int_significant =  international_reputation > 1)
int_significant_players
int_significant_players <- int_significant_players %>%
mutate(int_significant = as.numeric(int_significant))
int_significant_players
bootstrap_int_significant <- int_significant_players %>%
specify(response = int_significant) %>%
generate(reps = 10000, type =  "bootstrap") %>%
calculate(stat = "mean")
bootstrap_int_significant %>%
visualise(bins = 30)
bootstrap_int_significant <- int_significant_players %>%
specify(response = int_significant) %>%
generate(reps = 50000, type =  "bootstrap") %>%
calculate(stat = "mean")
bootstrap_int_significant %>%
visualise(bins = 30)
bootstrap_int_significant <- int_significant_players %>%
specify(response = int_significant) %>%
generate(reps = 70000, type =  "bootstrap") %>%
calculate(stat = "mean")
bootstrap_int_significant %>%
visualise(bins = 30)
bootstrap_int_significant <- int_significant_players %>%
specify(response = int_significant) %>%
generate(reps = 50000, type =  "bootstrap") %>%
calculate(stat = "mean")
bootstrap_int_significant %>%
visualise(bins = 30)
bootstrap_int_significant %>%
get_ci(level = 0.95, type = "percentile")
ci_95 <- bootstrap_int_significant %>%
get_ci(level = 0.95, type = "percentile")
bootstrap_int_significant %>%
visualise(bins = 30) +
shade_ci(ci_95)
ci_95
bootstrap_int_significant %>%
visualise(bins = 30) +
shade_ci(ci_95)
bootstrap_int_significant %>%
visualise(bins = 30) +
shade_ci(ci_95)
ci_95
point_est_mean_int_sig <- bootstrap_int_significant %>%
summarise(mean(stat))
point_est_mean_int_sig
point_est_mean_int_sig + ci_95
point_est_mean_int_sig
point_est_mean_int_sig
ci_95
null_distribution <- int_significant_players %>%
specify(response = int_significant) %>%
hypothesize(null = "point", mu = 0.04) %>%
generate(reps = 50000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution %>%
visualise(bins = 30) +
shade_p_value(obs_stat = observed_stat$mean_rating, direction = "both")
null_distribution %>%
visualise(bins = 30) +
shade_p_value(obs_stat = point_est_mean_int_sig$`mean(stat)`, direction = "both")
null_distribution %>%
get_p_value(obs_stat = point_est_mean_int_sig$`mean(stat)`, direction = "both")
players %>%
ggplot +
aes(x = overall) +
geom_histogram(col = "white") +
stat_function(
fun = dnorm,
args = list(
mean = mean(players$overall),
sd = sd(players$overall)
),
col = "red"
)
players %>%
ggplot +
aes(x = overall) +
geom_histogram(aes(y = ..density..), col = "white") +
stat_function(
fun = dnorm,
args = list(
mean = mean(players$overall),
sd = sd(players$overall)
),
col = "red")
null_distribution %>%
get_p_value(obs_stat = point_est_mean_int_sig$`mean(stat)`, direction = "righ")
null_distribution %>%
get_p_value(obs_stat = point_est_mean_int_sig$`mean(stat)`, direction = "greater")
